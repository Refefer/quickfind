#!/usr/bin/python
import os, sys, tty, termios
import time
import heapq
from collections import namedtuple

from Searcher import Searcher, Ranker, CursesPrinter

File = namedtuple("File", "dir,name,sname")

def visit(agg, dirname, names):
    isFile = lambda n: os.path.isfile(os.path.join(dirname, n))
    agg.extend(File(dirname, name, name.lower()) for name in names if isFile(name))

class SimpleRanker(Ranker):

    def __init__(self, query):
        self.q = query.lower()

    def rank(self, item):
        idx = item.sname.find(self.q)
        return idx if idx != -1 else None

def formatItem(item):
    return os.path.join(item.dir, item.name)

def getLines():
    import os
    env = os.environ
    def ioctl_GWINSZ(fd):
        try:
            import fcntl, termios, struct, os
            cr = struct.unpack('hh', fcntl.ioctl(fd, termios.TIOCGWINSZ,
        '1234'))
        except:
            return
        return cr

    cr = ioctl_GWINSZ(0) or ioctl_GWINSZ(1) or ioctl_GWINSZ(2)
    if cr is None:
        cr = (10, 0)

    return cr[0]

if __name__ == '__main__':
    lst = []
    os.path.walk('.', visit, lst)
    s = Searcher(SimpleRanker, CursesPrinter(formatItem))
    try:
        found = s.run(lst, getLines() - 3)
    except KeyboardInterrupt:
        sys.exit(0)

    if found is not None:
        v = os.environ['EDITOR']
        filename = os.path.join(found.dir, found.name)
        os.execvp(v, [v, filename])
