#!/usr/bin/python
import os, sys, tty, termios
import time
import heapq
from collections import namedtuple

from quickfind.Searcher import Searcher, Ranker, CursesPrinter
import quickfind.Console as Console
from quickfind.source.DirectorySource import DirectorySource, SimpleRanker

class DirRun(object):

    def __init__(self):
        self.rows, self.columns = Console.getDims()

    @classmethod
    def formatItem(cls, item):
        n = os.path.join(item.dir, item.name)
        if len(n) > 80:
            slice = max(0, len(n)-83)
            n = "..." + n[slice:]
        return n

    def run(self):
        items = DirectorySource().fetch()
        s = Searcher(SimpleRanker, CursesPrinter(self.formatItem))
        try:
            found = s.run(items, self.rows - 3)
        except KeyboardInterrupt:
            sys.exit(0)

        if found is not None:
            v = os.environ['EDITOR']
            filename = os.path.join(found.dir, found.name)
            os.execvp(v, [v, filename])      

if __name__ == '__main__':
    DirRun().run()
